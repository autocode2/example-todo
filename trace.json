{
  "config": {
    "model": "gpt-4o-mini"
  },
  "prompt": "Build a simple react app which a simple todo app.  \n - You should be able to add a todo, delete a todo and update a todo. \n - You should be able to see a list of todos. \n - You should be able to mark a todo as complete. \n - You should be able to filter the todos by complete and incomplete.  \n - You should be able to see the count of complete and incomplete\n\nGenerate an index.html and a src/App.js that will run in a browser without any further steps.\n",
  "system": {
    "systemPrompt": "You are an AI coding tool. Help the user with their coding tasks using the tools provided.\n\nYou will be given information about the current project in a <Context></Context> element.  This will include the full contents of files in the project, using <File></File> elements.\n\nUse the tools to perform the task. Ensure that the content of files is complete and will run as-is.  Do not leave any placeholders or elide the code. Guess sensible defaults if required.\n\nYou may call multiple tools in a single response.  You may also call the same tool multiple times. Call all the necessary tools to complete the users request.\n",
    "tools": [
      {
        "name": "message",
        "description": "Send a message to the user",
        "schema": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            }
          },
          "required": [
            "message"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      {
        "name": "create-file",
        "description": "Create a new file",
        "schema": {
          "type": "object",
          "properties": {
            "filename": {
              "type": "string"
            },
            "contents": {
              "type": "string"
            }
          },
          "required": [
            "filename",
            "contents"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      {
        "name": "remove-file",
        "description": "Remove a file",
        "schema": {
          "type": "object",
          "properties": {
            "filename": {
              "type": "string"
            }
          },
          "required": [
            "filename"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      {
        "name": "replace-file",
        "description": "Replace the contents of a file",
        "schema": {
          "type": "object",
          "properties": {
            "filename": {
              "type": "string"
            },
            "contents": {
              "type": "string"
            }
          },
          "required": [
            "filename",
            "contents"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    ]
  },
  "context": [],
  "responses": [
    {
      "message": "",
      "actions": [
        {
          "name": "create-file",
          "args": {
            "filename": "index.html"
          }
        },
        {
          "name": "create-file",
          "args": {
            "filename": "src/App.js"
          }
        }
      ],
      "usage": {
        "input_tokens": 350,
        "output_tokens": 858
      },
      "time": "2024-08-01T22:17:37.206Z"
    },
    {
      "message": "I have created a simple React Todo app for you. Here are the files:\n\n1. **index.html**:\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Todo App</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react/17.0.2/umd/react.production.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react-dom/17.0.2/umd/react-dom.production.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.15.0/babel.min.js\"></script>\n</head>\n<body>\n    <div id=\"root\"></div>\n    <script type=\"text/babel\" src=\"src/App.js\"></script>\n</body>\n</html>\n```\n\n2. **src/App.js**:\n```javascript\nconst { useState } = React;\n\nfunction App() {\n    const [todos, setTodos] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n    const [filter, setFilter] = useState('all');\n\n    const addTodo = () => {\n        if (inputValue) {\n            setTodos([...todos, { text: inputValue, completed: false }]);\n            setInputValue('');\n        }\n    };\n\n    const deleteTodo = (index) => {\n        const newTodos = todos.filter((_, i) => i !== index);\n        setTodos(newTodos);\n    };\n\n    const toggleComplete = (index) => {\n        const newTodos = todos.map((todo, i) => {\n            if (i === index) {\n                return { ...todo, completed: !todo.completed };\n            }\n            return todo;\n        });\n        setTodos(newTodos);\n    };\n\n    const filteredTodos = todos.filter(todo => {\n        if (filter === 'completed') return todo.completed;\n        if (filter === 'incomplete') return !todo.completed;\n        return true;\n    });\n\n    const completedCount = todos.filter(todo => todo.completed).length;\n    const incompleteCount = todos.length - completedCount;\n\n    return (\n        <div>\n            <h1>Todo App</h1>\n            <input \n                type=\"text\" \n                value={inputValue} \n                onChange={(e) => setInputValue(e.target.value)} \n                placeholder=\"Add a new todo\" \n            />\n            <button onClick={addTodo}>Add Todo</button>\n            <div>\n                <button onClick={() => setFilter('all')}>All</button>\n                <button onClick={() => setFilter('completed')}>Completed</button>\n                <button onClick={() => setFilter('incomplete')}>Incomplete</button>\n            </div>\n            <ul>\n                {filteredTodos.map((todo, index) => (\n                    <li key={index} style={{ textDecoration: todo.completed ? 'line-through' : 'none' }}>\n                        {todo.text} \n                        <button onClick={() => toggleComplete(index)}>Toggle Complete</button>\n                        <button onClick={() => deleteTodo(index)}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n            <div>\n                <p>Completed: {completedCount}</p>\n                <p>Incomplete: {incompleteCount}</p>\n            </div>\n        </div>\n    );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n```\n\nYou can run this app in a browser without any further steps. Just open the `index.html` file in your browser, and you will see the Todo app in action!",
      "actions": [],
      "usage": {
        "input_tokens": 1225,
        "output_tokens": 781
      },
      "time": "2024-08-01T22:17:45.791Z"
    }
  ]
}